<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.prj09.mybatis.mapper.member_t">
<!--  select결과를addressdto와 연결해주기 위한 (매핑위한) 설명서 작성-->

    <!-- pk는 id , result는 일반필드 , dto는 association-->
  <resultMap type="AddressDto" id="AddressMap">
    <!-- column 값을 type의 property필드에 저장해라 -->
    <id column="ADDRESS_NO"         property="addressNo"></id>
    <result column="ZONECODE"       property="zonecode"/>
    <result column="ADDRESS"        property="address"/>
    <result column="DETAIL_ADDRESS" property="detailAddress"/>
    <result column="EXTRA_ADDRESS"  property="extraAddress"/>
    <association javaType="MemberDto" property="member">
      <id column="MEMBER_NO" property="memberNo"/>
      <result column="EMAIL" property="email"/>
      <result column="NAME" property="name"/>
      <result column="GENDER" property="gender"/>
    </association>
  </resultMap>


  <insert id="insertMember"
          parameterType="MemberDto">
    <selectKey keyProperty="memberNo" order="BEFORE" resultType="int">
      SELECT MEMBER_SEQ.NEXTVAL
        FROM DUAL
    </selectKey>
    INSERT INTO MEMBER_T (
        MEMBER_NO
      , EMAIL
      , NAME
      , GENDER
    ) VALUES (
        #{memberNo}
      , #{email}
      , #{name}
      , #{gender}
    )
  </insert>
  
  <insert id="insertAddress"
          parameterType="AddressDto">
    INSERT INTO ADDRESS_T (
        ADDRESS_NO
      , ZONECODE
      , ADDRESS
      , DETAIL_ADDRESS
      , EXTRA_ADDRESS
      , MEMBER_NO
    ) VALUES (
        ADDRESS_SEQ.NEXTVAL
      , #{zonecode}
      , #{address}
      , #{detailAddress}
      , #{extraAddress}
      , #{member.memberNo}
    )
  </insert>
  
  <update id="updateMember"
          parameterType="Map">
    UPDATE MEMBER_T
       SET NAME = #{name}
         , GENDER=#{gender}
     WHERE MEMBER_NO = #{memberNo}
  </update>
  
  <update id="updateAddress"
        parameterType="Map">
   UPDATE ADDRESS_T
      SET ZONECODE = #{zonecode}
        , ADDRESS = #{address}
        , DETAIL_ADDRESS = #{detailAddress}
        , EXTRA_ADDRESS = #{extraAddress}
    WHERE MEMBER_NO = #{memberNo}
  </update>
  
  <delete id="deleteMember">
    DELETE
      FROM MEMBER_T
     WHERE MEMBER_NO = #{memberNo}
  </delete>
  
  <delete id="deleteMembers">
    DELETE
      FROM MEMBER_T
     WHERE MEMBER_NO 
     <foreach collection="list" item="memberNo" open="In(" separator="," close=")">
        #{memberNo}
     </foreach>
  </delete>
  
  
  <select id="getTotalMemberCount"
          resultType="int">
   SELECT COUNT(*)
     FROM MEMBER_T
  </select>
  
  <select id="getMemberList"
          parameterType="Map"
          resultMap="AddressMap"> <!-- resultType="MemberDto"는잘못됨..ADDRESS_NO 부터 1:1매칭이 안되어서 저장할 곳이 없음 -->
   SELECT MEMBER_NO, EMAIL, NAME, GENDER, ADDRESS_NO, ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS
     FROM (SELECT ROW_NUMBER() OVER(ORDER BY M.MEMBER_NO DESC) AS RN 
              , M.MEMBER_NO, M.EMAIL, M.NAME, M.GENDER
              , A.ADDRESS_NO, A.ZONECODE, A.ADDRESS, A.DETAIL_ADDRESS, A.EXTRA_ADDRESS
          FROM MEMBER_T M LEFT JOIN ADDRESS_T A 
            ON M.MEMBER_NO = A.MEMBER_NO)
   WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getMemberByNo"
          resultType="MemberDto">
  SELECT MEMBER_NO, EMAIL, NAME, GENDER
    FROM MEMBER_T
   WHERE MEMBER_NO = #{memberNo}
  </select>
  
  <select id="getTotalAddressCountByNo"
          resultType="int">
    SELECT COUNT(*)
      FROM ADDRESS_T
     WHERE MEMBER_NO = #{memberNo}
  </select>
  
  <select id="getAddressListByNo"
          parameterType="Map"
          resultType="AddressDto">
   SELECT ADDRESS_NO, ZONECODE, ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS
    FROM (SELECT ROW_NUMBER() OVER(ORDER BY ADDRESS_NO DESC) AS RN, ADDRESS_NO, ZONECODE, ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS
            FROM ADDRESS_T
            WHERE MEMBER_NO = #{memberNo})
   WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  
  
</mapper>